<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.z.system.mapper.SysStudentMapper">

    <resultMap type="SysStudent" id="SysStudentResult">
        <result property="studentId" column="student_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="studentName" column="student_name"/>
        <result property="sex" column="sex"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="studentNumber" column="student_number"/>
        <result property="group" column="group"/>
        <collection property="dept" javaType="SysDept" resultMap="deptResult"/>
    </resultMap>
    <resultMap id="deptResult" type="SysDept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="ancestors" column="ancestors"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <resultMap id="markRecordsResult" type="SysStudentMarkRecords">
        <result property="mark" column="mark"/>
        <result property="studentId" column="student_id"/>
        <result property="createTime" column="create_time"/>
        <result property="semesterId" column="semester_id"/>
        <result property="type" column="type"/>
        <result property="courseId" column="course_id"/>
        <result property="counts" column="counts"/>
        <result property="bonusTypeId" column="bonus_id"/>
    </resultMap>
    <sql id="selectSysStudentVo">
        select student_id,
               dept_id,
               student_name,
               sex,
               create_by,
               create_time,
               update_by,
               update_time,
               remark,
               `group`,
               student_number
        from sys_student
    </sql>

    <select id="selectSysStudentList" parameterType="SysStudent" resultMap="SysStudentResult">
        <include refid="selectSysStudentVo"/>
        <where>
            del_flag = '0'
            <if test="deptId != null ">and dept_id = #{deptId}</if>
            <if test="studentName != null  and studentName != ''">and student_name like concat('%', #{studentName},
                '%')
            </if>
            <if test="sex != null  and sex != ''">and sex = #{sex}</if>
            <if test="studentNumber != null  and studentNumber != ''">and student_number = #{studentNumber}</if>
        </where>
    </select>

    <select id="selectSysStudentByStudentId" parameterType="Long" resultMap="SysStudentResult">
        <include refid="selectSysStudentVo"/>
        where student_id = #{studentId}
    </select>

    <insert id="insertSysStudent" parameterType="SysStudent" useGeneratedKeys="true" keyProperty="studentId">
        insert into sys_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="studentName != null and studentName != ''">student_name,</if>
            <if test="sex != null">sex,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="studentNumber != null">student_number,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="studentName != null and studentName != ''">#{studentName},</if>
            <if test="sex != null">#{sex},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="studentNumber != null">#{studentNumber},</if>
        </trim>
    </insert>

    <update id="updateSysStudent" parameterType="SysStudent">
        update sys_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="studentName != null and studentName != ''">student_name = #{studentName},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="studentNumber != null">student_number = #{studentNumber},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteSysStudentByStudentId" parameterType="Long">
        update sys_student
        set del_flag = '1'
        where student_id = #{studentId}
    </delete>

    <update id="deleteSysStudentByStudentIds" parameterType="String">
        update sys_student set del_flag = '1' where student_id in
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </update>
    <update id="deletePatriarchByPatriarch" parameterType="String">
        update sys_patriarch set del_flag = '1' where patriarch_id in
        <foreach item="studentId" collection="list" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </update>


    <insert id="addClassEvaluation">
        insert into
        sys_student_mark_records(teacher_id,student_id,mark,create_time,semester_id,content,image,course_id,dept_id,type,bonus_id)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.teacherId},
            #{item.studentId},
            #{item.mark},
            sysdate(),
            #{item.semesterId},
            #{item.content},
            #{item.image},
            #{item.courseId},#{item.deptId},#{item.type},#{item.bonusTypeId})
        </foreach>

    </insert>

    <update id="addStudentMark">
        <foreach collection="list" item="item">
            update sys_student_mark set mark =mark+#{item.mark} where student_id =#{item.studentId} and semester_id =
            #{item.semesterId};
        </foreach>
    </update>

    <select id="selectPatriarchByStudentIds" parameterType="String" resultType="java.lang.Long">
        select patriarch_id from sys_student_patriarch where student_id in
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </select>

    <insert id="insertStudentMark">
        insert into sys_student_mark(student_id,mark,semester_id)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.studentId},#{item.mark},#{item.semesterId})
        </foreach>
    </insert>
    <select id="selectSutdentByGradeIds" parameterType="String" resultType="java.lang.Long">
        select ss.student_id from sys_student ss
        left join sys_dept sd on ss.dept_id = sd.dept_id
        where sd.parent_id in
        <foreach item="gardeId" collection="list" open="(" separator="," close=")">
            #{gardeId}
        </foreach>
    </select>
    <select id="selectSutdentByClassIds" parameterType="String" resultType="java.lang.Long">
        select student_id from sys_student
        where dept_id in
        <foreach item="classId" collection="list" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </select>

    <insert id="insertStudentMedal">
        insert into sys_event_student_medal(student_id,medal_id,semester_id)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.studentId},#{item.medalId},#{item.semesterId})
        </foreach>
    </insert>

    <select id="selectSysStudentListAndDept" parameterType="Long" resultMap="SysStudentResult">
        select s.student_id,
               s.student_name,
               s.sex,
               s.student_number,
               sd.dept_id,
               sd.dept_name,
               sd.ancestors,
               sd.parent_id
        from sys_student s
                 left join sys_dept sd on s.dept_id = sd.dept_id
        where s.del_flag = '0'
    </select>

    <select id="selectSysStudentIdByNameAndDept" parameterType="string" resultMap="SysStudentResult">
        select sd.dept_id, ss.student_id
        from sys_student ss
                 join sys_dept sd on sd.dept_id = ss.dept_id
        where ss.student_name = #{studentName}
          and sd.dept_name = #{deptName}
          and ss.del_flag = '0'
          and sd.del_flag = '0'
    </select>

    <select id="selectStudentBonusCount" parameterType="SysStudentMarkRecords" resultMap="markRecordsResult">
        select student_id,sum(mark) as counts
        from sys_student_mark_records
        <where>
            <if test="deptId != null ">and dept_id = #{deptId}</if>
            <if test="courseId != null and  courseId  != ''">and course_id = #{courseId}</if>
            <if test="semesterId != null  and semesterId != ''">and semester_id = #{semesterId}</if>
        </where>
        GROUP BY student_id
    </select>
    <select id="selectStudentBonusCountByStudentId" parameterType="SysStudentMarkRecords" resultMap="markRecordsResult">
        select bonus_id ,count(*) as counts
        from sys_student_mark_records
        <where>
            <if test="studentId != null ">and student_id = #{studentId}</if>
            <if test="type != null">and type = #{type}</if>
        </where>
        GROUP BY bonus_id
    </select>
    <select id="selectStudentDetail" parameterType="SysStudentMarkRecords" resultMap="markRecordsResult">
        select student_id,count(mark) as counts
        from sys_student_mark_records
        <where>
            <if test="teacherId != null ">and teacher_id = #{teacherId}</if>
            <if test="semesterId != null">and semester_id = #{semesterId}</if>
            <if test="courseId != null">and course_id = #{courseId}</if>
            <if test="deptId != null">and dept_id = #{deptId}</if>
        </where>
        GROUP BY student_id order by counts desc
    </select>
    <select id="selectEvaluationDetail" parameterType="SysStudentMarkRecords"
            resultType="com.z.system.domain.vo.StatisticVo">
        select ssmr.record_id as id, su.nick_name as teacherName,ss.student_id as studentId,ss.student_name as
        studentName,ssmr.mark,sbt.title as
        bonusName,ssmr.create_time as createTime
        from sys_student_mark_records ssmr
        left join sys_user su on su.user_id = ssmr.teacher_id
        left join sys_student ss on ss.student_id = ssmr.student_id
        left join sys_bonus_type sbt on sbt.bonus_type_id = ssmr.bonus_id

        <where>
            ss.del_flag = '0'
            <if test="teacherId != null ">and ssmr.teacher_id = #{teacherId}</if>
            <if test="semesterId != null">and ssmr.semester_id = #{semesterId}</if>
            <if test="courseId != null">and ssmr.course_id = #{courseId}</if>
            <if test="deptId != null">and ssmr.dept_id = #{deptId}</if>
            <if test="studentId != null">and ssmr.student_id = #{studentId}</if>
        </where>
        order by ssmr.create_time desc
    </select>

    <delete id="removeMarkRecords" parameterType="Long">
        delete
        from sys_student_mark_records
        where record_id = #{id}
    </delete>

    <select id="selectStudentIdByDeptName" parameterType="String" resultType="java.lang.Long">
        select student_id
        from sys_student
        where dept_id in
              (select dept_id from sys_dept where parent_id in (select dept_id from sys_dept where dept_name = #{name}))
    </select>

    <select id="selectUserByStudentIds" parameterType="String" resultType="java.lang.Long">
        select patriarch_id from sys_student_patriarch
        where student_id in
        <foreach item="studentId" collection="list" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </select>
    <delete id="deleteStudentPatriarchByPatriarchIds" parameterType="String">
        delete from sys_student_patriarch where patriarch_id in
        <foreach item="patriarchId" collection="list" open="(" separator="," close=")">
            #{patriarchId}
        </foreach>
    </delete>

    <select id="selectclassByGradeName" parameterType="String" resultMap="deptResult">
        select dept_id, dept_name
        from sys_dept
        where parent_id in (select dept_id from sys_dept where dept_name = #{name})
    </select>

    <select id="selectIdByDeptName" parameterType="String" resultType="java.lang.Long">
        select dept_id
        from sys_dept
        where dept_name = #{newClass}
    </select>

    <update id="updateStudentDeptByMap">
        update sys_student set dept_id = #{newClassId} where student_id in
        <foreach collection="studentId" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateSysStudentBatch">
        <foreach collection="list" item="item" separator=";">
            update sys_student set `group` = #{item.group} where student_id = #{item.studentId}
        </foreach>
    </update>

    <select id="selecteventStudentMedalByStudentId"
            resultType="com.z.system.domain.SysEventMedal">
        select count(event_medal_id) as num, event_medal_name as eventMedalName, url
        from sys_event_student_medal sesm
                 join sys_event_medal sem on sesm.medal_id = sem.event_medal_id
        where sesm.student_id = #{studentId}
          and sesm.semester_id = #{semesterId}
        GROUP BY event_medal_id
    </select>

    <insert id="insertStudentDeptHistory">
        insert into sys_student_dept_history(student_id,dept_id,semester_id)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.studentId},#{item.deptId},#{item.semesterId})
        </foreach>
    </insert>

    <select id="selectDeptHistory" resultType="java.lang.Long">
        select dept_id
        from sys_student_dept_history
        where student_id = #{studentId}
          and semester_id = #{semesterId}
    </select>

    <select id="selectCourseCount" resultMap="markRecordsResult">
        select sc.course_name as courseName,count(ssmr.record_id) as counts
        from sys_student_mark_records ssmr left join sys_course sc on sc.course_id = ssmr.course_id
        <where>
            ssmr.mark > 0
            <if test="studentId != null ">and student_id = #{studentId}</if>
            <if test="semesterId != null  and semesterId != ''">and semester_id = #{semesterId}</if>
        </where>
        GROUP BY sc.course_name
    </select>

    <select id="selectStudentCountIndex" resultType="integer">
        select count(student_id)
        from sys_student
        where del_flag = '0'
    </select>
    <select id="selectMarkByStudentId" resultType="Long">
        select mark
        from sys_student_mark
        where student_id = #{studentId}
          and semester_id = #{semesterId}
    </select>
</mapper>